{"version":3,"sources":["component/chat.jsx","component/login.jsx","component/friendrequest.jsx","component/userSearch.jsx","component/roomSelect.jsx","component/signup.jsx","App.js","reportWebVitals.js","index.js","component/css/select.module.css","component/css/chat.module.css","component/css/login.module.css"],"names":["socket","io","Chat","props","useState","messageList","setMessageList","message","setMessage","newMessage","setNewMessage","messagesEndRef","useRef","isMountRef","isTyped","setIsTyped","useEffect","Axios","post","room1","String","userId","chatId","room2","then","response","data","console","log","scroll","scrollTo","current","getBoundingClientRect","emit","on","scrollToBottom","sendMessage","e","preventDefault","user","comment","leaveRoom","leave","scrollIntoView","behavior","minWidth","className","style","container","username","roomName","onClick","chatarea","map","payload","index","comment1","myname","mycomment","clearRight","comment2","othername","mothercomment","clearLeft","form","pointer","type","name","placeholder","value","onChange","target","ref","maxWidth","leaveS","chatareaS","formS","pointerS","Login","email","setEmail","password","setPassword","emailError","setEmailError","passError","setPassError","emailChange","passChange","decideLogin","isLoggedIn","login","obj","id","push","setjson","JSON","stringify","window","localStorage","setItem","backHome","errorMsg","containerS","FriendRequest","requestList","setRequestList","reRender","setReRender","get","beFriend","requestId","requestname","twoList","splice","addFriend","deleteRequest","delete","select","requestTop","requestBottom","length","requestButton","requestright1","requestright2","selectS","UserSearch","search","setSearch","userList","setUserList","isNull","setIsNull","changeSearch","searchUser","sendRequest","alert","searchButton","friendIdList","includes","sendButton","RoomSelect","page","setPage","setChatId","setRoomName","roomList","setRoomList","setUser","setUserId","setFriendIdList","newFriend","setNewFriend","friendId","selectPage","selectRoom","number","quit","selectTop","selectBottom","friendname","friendList","SignUp","setName","passCheck","setPassCheck","isRegistered","setIsRegistered","nameNone","setNameNone","emailNone","setEmailNone","passNone","setPassNone","passCheckError","setPassCheckError","error","setError","nameChange","checkChange","register","goLogin","errorTop","pass2","App","setIsLoggedIn","setId","strage","getItem","loggedData","parse","home","currentPage","loginPage","signupPage","homePage","RoomSelectPage","logout","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0ca3bd3a.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef} from \"react\";\r\nimport io from 'socket.io-client'\r\nimport Axios from \"axios\"\r\nimport style from \"./css/chat.module.css\"\r\nimport  MediaQuery from \"react-responsive\"\r\nimport { animateScroll as scroll } from 'react-scroll'\r\nconst socket = io('https://young-yame-0822.lolipop.io')\r\n\r\nfunction Chat (props){\r\n  const [messageList,setMessageList]=useState([])\r\n  const [message,setMessage]=useState(\"\")\r\n  const [newMessage,setNewMessage]=useState([])\r\n  const messagesEndRef = useRef(null)\r\n  const isMountRef=useRef(null)\r\n  const [isTyped,setIsTyped]=useState(false)\r\n\r\n  useEffect(()=>{\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/getcomments\",{\r\n            room1:String(props.userId)+\":\"+String(props.chatId),\r\n            room2:String(props.chatId)+\":\"+String(props.userId)\r\n        }).then((response)=>{\r\n            setMessageList(response.data);\r\n            console.log(\"過去のデータ取得\")\r\n        })\r\n    },[props.chatId,props.userId])\r\n    useEffect(()=>{\r\n        scroll.scrollTo(1000000000000000,1000)\r\n        console.log(messagesEndRef.current.getBoundingClientRect())\r\n    },[])\r\n\r\n  useEffect(()=>{\r\n    socket.emit(\"JOIN_CHAT\",{\r\n        room1:String(props.userId)+\":\"+String(props.chatId),\r\n        room2:String(props.chatId)+\":\"+String(props.userId)\r\n    })\r\n  },[props.chatId,props.userId])\r\n\r\n    useEffect(()=>{\r\n        isMountRef.current=true;\r\n        socket.on(\"RECEIVE_MESSAGE\",(data)=>{\r\n            if(isMountRef.current){\r\n                setNewMessage(data)\r\n                console.log(data)\r\n            }\r\n        })\r\n        return()=>isMountRef.current=false\r\n        \r\n        \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        setMessageList(messageList=>[...messageList,newMessage])\r\n        scrollToBottom()\r\n    },[newMessage])\r\n\r\n    const sendMessage=(e)=>{\r\n        e.preventDefault();\r\n        socket.emit(\"SEND_MESSAGE\",{\r\n        user:props.user,\r\n        userId:props.userId,\r\n        comment:message,\r\n        room1:String(props.userId)+\":\"+String(props.chatId),\r\n        room2:String(props.chatId)+\":\"+String(props.userId)\r\n        })\r\n        setMessageList([...messageList,{\r\n            user:props.user,\r\n            userId:props.userId,\r\n            comment:message\r\n        }])\r\n        setMessage(\"\")\r\n        setIsTyped(false)\r\n        scrollToBottom()\r\n    }\r\n    const leaveRoom=()=>{\r\n        socket.emit(\"LEAVE_CHAT\",{\r\n            room1:String(props.userId)+\":\"+String(props.chatId),\r\n            room2:String(props.chatId)+\":\"+String(props.userId)\r\n        })\r\n        props.leave()\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef?.current?.scrollIntoView({ behavior: \"smooth\" })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MediaQuery minWidth={500}>\r\n                <div className={style.container}>\r\n                    <div className={style.username}>\r\n                        <h2>{props.roomName}</h2>\r\n                        <button onClick={leaveRoom} className={style.leave}>ルームセレクトに戻る</button>\r\n                    </div>\r\n                <div className={style.chatarea}>\r\n                {messageList.map((payload, index)=>{\r\n                    if(props.userId===payload.userId){\r\n                        return(\r\n                            <div key={index} className={style.comment1}>\r\n                                <h3 className={style.myname}>{payload.user}</h3>\r\n                                <p className={style.mycomment}>{payload.comment}</p>\r\n                                <div className={style.clearRight}></div>\r\n                            </div>\r\n                            )\r\n                    }else{\r\n                        return(\r\n                            <div key={index} className={style.comment2}>\r\n                                <h3 className={style.othername}>{payload.user}</h3>\r\n                                <p className={style.mothercomment}>{payload.comment}</p>\r\n                                <div className={style.clearLeft}></div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    \r\n                })}\r\n                </div>\r\n                <div className={style.form}>\r\n                    <div className={style.pointer}>\r\n                        <textarea type=\"text\" name=\"message\"\r\n                        placeholder='メッセージを入力'\r\n                        value={message}\r\n                        onChange={(e)=>{setMessage(e.target.value);setIsTyped(e.target.value!==\"\")}}/>\r\n                        {isTyped?\r\n                        <>\r\n                        <button onClick={sendMessage}>送信</button>\r\n                        <div className={style.clearRight}></div>\r\n                        </>\r\n                        :\r\n                        null}\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div ref={messagesEndRef}/>\r\n            </div>\r\n            </MediaQuery>\r\n            {/*スマホ版*/}\r\n            <MediaQuery maxWidth={500}>\r\n                <div className={style.container}>\r\n                    <div className={style.username}>\r\n                        <h2>{props.roomName}</h2>\r\n                        <button onClick={leaveRoom} className={style.leaveS}>戻る</button>\r\n                    </div>\r\n                <div className={style.chatareaS}>\r\n                {messageList.map((payload, index)=>{\r\n                    if(props.userId===payload.userId){\r\n                        return(\r\n                            <div key={index} className={style.comment1}>\r\n                                <h3 className={style.myname}>{payload.user}</h3>\r\n                                <p className={style.mycomment}>{payload.comment}</p>\r\n                                <div className={style.clearRight}></div>\r\n                            </div>\r\n                            )\r\n                    }else{\r\n                        return(\r\n                            <div key={index} className={style.comment2}>\r\n                                <h3 className={style.othername}>{payload.user}</h3>\r\n                                <p className={style.mothercomment}>{payload.comment}</p>\r\n                                <div className={style.clearLeft}></div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    \r\n                })}\r\n                </div>\r\n                <div className={style.formS}>\r\n                    <div className={style.pointerS}>\r\n                        <textarea type=\"text\" name=\"message\"\r\n                        placeholder='メッセージを入力'\r\n                        value={message}\r\n                        onChange={(e)=>{setMessage(e.target.value);setIsTyped(e.target.value!==\"\")}}/>\r\n                        {isTyped?\r\n                        <>\r\n                        <button onClick={sendMessage}>送信</button>\r\n                        <div className={style.clearRight}></div>\r\n                        </>\r\n                        :\r\n                        null}\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n            <div ref={messagesEndRef}/>\r\n            </MediaQuery>\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default Chat","import {useState} from \"react\"\r\nimport Axios from \"axios\"\r\nimport style from \"./css/login.module.css\"\r\nimport  MediaQuery from \"react-responsive\"\r\nfunction Login (props){\r\n    const [email,setEmail]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [emailError,setEmailError]=useState(false)\r\n    const [passError,setPassError]=useState(false)\r\n\r\n    /*ログイン欄とパスワード欄が入力されたとき */\r\n    const emailChange=(e)=>{\r\n        setEmail(e.target.value)\r\n        setEmailError(false)\r\n    }\r\n    const  passChange=(e)=>{\r\n        setPassword(e.target.value)\r\n        setPassError(false)\r\n    }\r\n\r\n    /*ログインボタンが押された時 */\r\n    const decideLogin=()=>{\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/login\",{\r\n            email:email,\r\n            password:password\r\n        }).then((response)=>{\r\n            if(response.data.isLoggedIn){\r\n                props.login()\r\n                var array=[]\r\n                var obj={\r\n                    \"isLoggedIn\":true,\r\n                    \"id\":response.data.id,\r\n                    \"name\":response.data.name\r\n                }\r\n                array.push(obj)\r\n                var setjson=JSON.stringify(obj)\r\n                window.localStorage.setItem(\"loggedData\",setjson)\r\n                props.backHome()\r\n            }else{\r\n                if(response.data.errorMsg===\"email\"){\r\n                    setEmailError(true)\r\n                }else{\r\n                    setPassError(true)\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return(\r\n        <>\r\n            <MediaQuery minWidth={500}>\r\n                <div className=\"home\">\r\n                    <div className={style.container}>\r\n                        <label>メールアドレス</label>\r\n                        <br/>\r\n                        <input type=\"text\" value={email} onChange={emailChange} placeholder=\"email\"/>\r\n                        {emailError ?\r\n                        <p>このメールアドレスは登録されていません</p>\r\n                        :null}\r\n                        <br/>\r\n                        <label>パスワード</label>\r\n                        <br/>\r\n                        <input type=\"password\" value={password} onChange={passChange} placeholder=\"password\"/>\r\n                        {passError ?\r\n                        <p>パスワードが間違っています</p>\r\n                        :null}\r\n                        <br/>\r\n                        <button onClick={decideLogin}>ログイン</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                \r\n                </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={500}>\r\n                <div className=\"homeLoginS\">\r\n                    <div className={style.containerS}>\r\n                        <label>メールアドレス</label>\r\n                        <br/>\r\n                        <input type=\"text\" value={email} onChange={emailChange} placeholder=\"email\"/>\r\n                        {emailError ?\r\n                        <p>このメールアドレスは登録されていません</p>\r\n                        :null}\r\n                        <br/>\r\n                        <label>パスワード</label>\r\n                        <br/>\r\n                        <input type=\"password\" value={password} onChange={passChange} placeholder=\"password\"/>\r\n                        {passError ?\r\n                        <p>パスワードが間違っています</p>\r\n                        :null}\r\n                        <br/>\r\n                        <button onClick={decideLogin}>ログイン</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                \r\n                </div>\r\n            </MediaQuery>\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default Login","import Axios from \"axios\"\r\nimport {useState,useEffect} from \"react\"\r\nimport style from \"./css/select.module.css\"\r\nimport io from 'socket.io-client'\r\nimport  MediaQuery from \"react-responsive\"\r\nconst socket = io('https://young-yame-0822.lolipop.io')\r\nfunction FriendRequest(props){\r\n    const [requestList,setRequestList]=useState([])\r\n    const [reRender,setReRender]=useState(false)\r\n    \r\n    useEffect(()=>{\r\n        Axios.get(`https://young-yame-0822.lolipop.io/friendrequest/${props.userId}`).then((response)=>{\r\n            setRequestList(response.data);\r\n            console.log(response.data)\r\n         })\r\n    },[props.userId,reRender])\r\n    \r\n    const beFriend=(e,index,requestId,requestname)=>{\r\n        const newList=[...requestList]\r\n        const twoList=[newList.splice(index,1)]\r\n        setRequestList(twoList);\r\n        e.preventDefault();\r\n        console.log(index,requestId,requestname)\r\n        socket.emit(\"BE_FRIEND\",{\r\n            id:props.userId,\r\n            user:props.user,\r\n            requestId:requestId\r\n        })\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/befriend\",{\r\n            userId:props.userId,\r\n            username:props.user,\r\n            requestId:requestId,\r\n            requestname:requestname\r\n        })\r\n        props.addFriend(requestId,requestname)\r\n        setReRender(!reRender)\r\n    }\r\n\r\n    const deleteRequest=(requestId)=>{\r\n        Axios.delete(`https://young-yame-0822.lolipop.io/deleterequest/${requestId}`)\r\n        setReRender(!reRender)\r\n    }\r\n    return(\r\n        <>\r\n            <MediaQuery minWidth={500}>\r\n                <div className={style.select}>\r\n                    <div className={style.requestTop}>\r\n                        <button onClick={props.leave}>戻る</button>\r\n                    </div>\r\n                    \r\n                    <h2>リクエストリスト</h2>\r\n                    <div className={style.requestBottom}>\r\n                    {requestList.length>0 ?\r\n                    requestList.map((data,index)=>{\r\n                        console.log(index)\r\n                        return(\r\n                            <div key={index}>\r\n                                <button className={style.requestButton}>{data.requestname}</button>\r\n                                <button className={style.requestright1} onClick={(e)=>{beFriend(e,index,data.requestId,data.requestname)}}>◎</button>\r\n                                <button className={style.requestright2} onClick={()=>{deleteRequest(data.requestId)}}>✖</button>\r\n                            </div>\r\n                        )\r\n                        \r\n                        \r\n                    }):\r\n                    <p>フレンドリクエストはありません</p>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={500}>\r\n                <div className={style.selectS}>\r\n                    <div className={style.requestTop}>\r\n                        <button onClick={props.leave}>戻る</button>\r\n                    </div>\r\n                    \r\n                    <h2>リクエストリスト</h2>\r\n                    <div className={style.requestBottom}>\r\n                    {requestList.length>0 ?\r\n                    requestList.map((data,index)=>{\r\n                        console.log(index)\r\n                        return(\r\n                            <div key={index}>\r\n                                <button className={style.requestButton}>{data.requestname}</button>\r\n                                <button className={style.requestright1} onClick={(e)=>{beFriend(e,index,data.requestId,data.requestname)}}>◎</button>\r\n                                <button className={style.requestright2} onClick={()=>{deleteRequest(data.requestId)}}>✖</button>\r\n                            </div>\r\n                        )\r\n                        \r\n                        \r\n                    }):\r\n                    <p>フレンドリクエストはありません</p>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default FriendRequest","import {useState} from \"react\"\r\nimport Axios from \"axios\"\r\nimport style  from \"./css/select.module.css\"\r\nimport  MediaQuery from \"react-responsive\"\r\nfunction UserSearch(props){\r\n    const [search,setSearch]=useState(\"\")\r\n    const [userList,setUserList]=useState([])\r\n    const [message,setMessage]=useState(\"\")\r\n    const [isNull,setIsNull]=useState(true)\r\n    \r\n     const changeSearch=(e)=>{\r\n        setSearch(e.target.value)\r\n        setIsNull(e.target.value===\"\")\r\n    }\r\n    const searchUser=()=>{\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/serchusers\",{\r\n            user:search\r\n        }).then((response)=>{\r\n            setUserList(response.data);\r\n            console.log(response.data)\r\n        })\r\n    }\r\n\r\n    const sendRequest=(id)=>{\r\n        Axios.post(\"https://young-yame-0822.lolipop.io/sendrequest\",{\r\n            userId:id,\r\n            requestId:props.userId,\r\n            requestname:props.user\r\n        }).then((response)=>{\r\n            setMessage(response.data)\r\n        })\r\n    }\r\n\r\n    return(\r\n    <>\r\n        <MediaQuery minWidth={500}>\r\n            <div className={style.select}>\r\n                    <div className={style.requestTop}>\r\n                        <button onClick={props.leave}>戻る</button>\r\n                    </div>\r\n                    \r\n                    <h2>ユーザー検索</h2>\r\n                    <p className={style.alert}>{message}</p>\r\n                    <div className={style.search}>\r\n                        <input type=\"text\" value={search} onChange={changeSearch}/>\r\n                        {isNull?\r\n                        null\r\n                        :<button className={style.searchButton} onClick={()=>{searchUser()}}>検索</button>\r\n                        }\r\n                        \r\n                        {userList.map((data,index)=>{\r\n                            console.log(props.friendIdList.includes(data.id))\r\n                            if(props.friendIdList.includes(data.id)){\r\n                                return(\r\n                                    <p key={index}>{data.name}(フレンド)</p>\r\n                                )\r\n                            }else{\r\n                                return(\r\n                                    <div key={index}>\r\n                                        <p>{data.name}</p>\r\n                                        <button className={style.sendButton} onClick={()=>{sendRequest(data.id)}}>リクエストを送る</button>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                    </div>\r\n            </div>\r\n        </MediaQuery>\r\n        <MediaQuery maxWidth={500}>\r\n            <div className={style.selectS}>\r\n                    <div className={style.requestTop}>\r\n                        <button onClick={props.leave}>戻る</button>\r\n                    </div>\r\n                    \r\n                    <h2>ユーザー検索</h2>\r\n                    <p className={style.alert}>{message}</p>\r\n                    <div className={style.search}>\r\n                        <input type=\"text\" value={search} onChange={changeSearch}/>\r\n                        {isNull?\r\n                        null\r\n                        :<button className={style.searchButton} onClick={()=>{searchUser()}}>検索</button>\r\n                        }\r\n                        \r\n                        {userList.map((data,index)=>{\r\n                            console.log(props.friendIdList.includes(data.id))\r\n                            if(props.friendIdList.includes(data.id)){\r\n                                return(\r\n                                    <p key={index}>{data.name}(フレンド)</p>\r\n                                )\r\n                            }else{\r\n                                return(\r\n                                    <div key={index}>\r\n                                        <p>{data.name}</p>\r\n                                        <button className={style.sendButton} onClick={()=>{sendRequest(data.id)}}>リクエストを送る</button>\r\n                                    </div>\r\n                                    \r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                    </div>\r\n            </div>\r\n        </MediaQuery>\r\n            \r\n    </>\r\n    )\r\n}\r\nexport default UserSearch","import {useState,useEffect,useRef} from \"react\"\r\nimport Axios from \"axios\"\r\nimport Chat from \"./chat\";\r\nimport io from 'socket.io-client'\r\nimport style from \"./css/select.module.css\"\r\nimport FriendRequest from \"./friendrequest\";\r\nimport UserSearch from \"./userSearch\";\r\nimport  MediaQuery from \"react-responsive\"\r\nconst socket = io('https://young-yame-0822.lolipop.io')\r\nfunction RoomSelect(props){\r\n    const [page,setPage]=useState(\"select\")\r\n    const [chatId,setChatId]=useState(0)\r\n    const [roomName,setRoomName]=useState(\"\")\r\n    const [roomList,setRoomList]=useState([])\r\n    const [user,setUser]=useState(\"\")\r\n    const [userId,setUserId]=useState(null)\r\n    const [friendIdList,setFriendIdList]=useState([])\r\n    const isMountRef=useRef(null)\r\n    const [newFriend,setNewFriend]=useState([])\r\n\r\n    \r\n    useEffect(()=>{\r\n        setUser(props.user)\r\n        setUserId(props.userId)\r\n        socket.emit(\"ENTER_APP\",{\r\n            userId:props.userId\r\n        })\r\n    },[props.user,props.userId])\r\n\r\n    useEffect(()=>{\r\n        Axios.get(`https://young-yame-0822.lolipop.io/friendlist/${props.userId}`).then((response)=>{\r\n            setRoomList(response.data);\r\n            console.log(response.data)\r\n            setFriendIdList(response.data.map(obj=>obj.friendId))\r\n        })\r\n    },[props.userId])\r\n\r\n    useEffect(()=>{\r\n        isMountRef.current=true;\r\n        socket.on(\"RECEIVE_FRIEND\",(data)=>{\r\n            if(isMountRef.current){\r\n                setNewFriend(data)\r\n                console.log(data)\r\n            }\r\n        })\r\n        return()=>isMountRef.current=false\r\n        \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        setRoomList(roomList=>[...roomList,newFriend])\r\n        setFriendIdList(friendIdList=>[...friendIdList,newFriend.friendId])\r\n    },[newFriend])\r\n    \r\n    const selectRoom=(number,name)=>{\r\n        setChatId(number)\r\n        setRoomName(name)\r\n        setPage(\"chat\")\r\n    }\r\n    const leave=()=>{\r\n        setChatId(0)\r\n        setRoomName(\"\")\r\n        setPage(\"select\")\r\n    }\r\n\r\n    const addFriend=(id,name)=>{\r\n        setRoomList([...roomList,{friendId:id,friendname:name}])\r\n        setFriendIdList([...friendIdList,id])\r\n    }\r\n\r\n    const quit=()=>{\r\n        props.backHome()\r\n        socket.emit(\"LEAVE_APP\",{\r\n            userId:props.userId\r\n        })\r\n    }\r\n\r\n    let selectPage;\r\n    if(page===\"select\"){\r\n        selectPage=<>\r\n            <MediaQuery minWidth={500}>\r\n                <div className={style.select}>\r\n                    <div className={style.selectTop}>\r\n                        <ul>\r\n                            <li><button onClick={()=>{setPage(\"serch\")}}>ユーザー検索</button></li>\r\n                            <li><button onClick={()=>{setPage(\"request\")}}>フレンドリクエスト</button></li>\r\n                            <li><button onClick={()=>{quit()}}>ホームに戻る</button></li>\r\n                            <div className={style.clearLeft}></div>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <h2>フレンド</h2>\r\n                    <div className={style.selectBottom}>\r\n                    {roomList.map((data,index)=>{\r\n                        return(\r\n                            <div key={index}>\r\n                                <button onClick={()=>{selectRoom(data.friendId,data.friendname)}}>{data.friendname}</button>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={500}>\r\n                <div className={style.selectS}>\r\n                    <div className={style.selectTop}>\r\n                        <ul>\r\n                            <li><button onClick={()=>{setPage(\"serch\")}}>ユーザー検索</button></li>\r\n                            <li><button onClick={()=>{setPage(\"request\")}}>フレンドリクエスト</button></li>\r\n                            <li><button onClick={()=>{quit()}}>ホームに戻る</button></li>\r\n                            <div className={style.clearLeft}></div>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <h2>フレンド</h2>\r\n                    <div className={style.selectBottom}>\r\n                    {roomList.map((data,index)=>{\r\n                        return(\r\n                            <div key={index}>\r\n                                <button onClick={()=>{selectRoom(data.friendId,data.friendname)}}>{data.friendname}</button>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n        </>\r\n    }else if(page===\"request\"){\r\n        selectPage=<FriendRequest  user={user} userId={userId} leave={leave} addFriend={(id,name)=>{addFriend(id,name)}}/>\r\n    }else if(page===\"serch\"){\r\n        selectPage=<UserSearch friendList={roomList} friendIdList={friendIdList} userId={userId} leave={leave} user={user}/>\r\n    }else{\r\n        selectPage=<Chat chatId={chatId} roomName={roomName} user={user} userId={userId} leave={leave}/>\r\n    }\r\n    return(\r\n        <div>\r\n            {selectPage}\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default RoomSelect","import {useState} from \"react\"\r\nimport Axios from \"axios\"\r\nimport style from \"./css/login.module.css\"\r\nimport  MediaQuery from \"react-responsive\"\r\nfunction SignUp (props){\r\n    const [name,setName]=useState(\"\")\r\n    const [email,setEmail]=useState(\"\")\r\n    const [password,setPassword]=useState(\"\")\r\n    const [passCheck,setPassCheck]=useState(\"\")\r\n    const [isRegistered,setIsRegistered]=useState(false)\r\n    const [nameNone,setNameNone]=useState(false)\r\n    const [emailNone,setEmailNone]=useState(false)\r\n    const [passNone,setPassNone]=useState(false)\r\n    const [passCheckError,setPassCheckError]=useState(false)\r\n    const [error,setError]=useState(false)\r\n    \r\n    /*入力欄に入力されたとき*/\r\n    const nameChange=(e)=>{\r\n        setName(e.target.value)\r\n        setNameNone(e.target.value===\"\")\r\n    }\r\n    const emailChange=(e)=>{\r\n        setEmail(e.target.value)\r\n        setEmailNone(e.target.value===\"\")\r\n    }\r\n    const passChange=(e)=>{\r\n        setPassword(e.target.value)\r\n        setPassNone(e.target.value===\"\")\r\n    }\r\n    const checkChange=(e)=>{\r\n        setPassCheck(e.target.value)\r\n        setPassCheckError(e.target.value!==password)\r\n    }\r\n\r\n    /*登録ボタンが押されたとき */\r\n    const register=()=>{\r\n        setError(false)\r\n        if(nameNone||emailNone||passNone||passCheckError){\r\n            setError(true)\r\n        }else if(name===\"\"||email===\"\"||password===\"\"||passCheck===\"\"){\r\n            if(name===\"\"){\r\n                setNameNone(true)\r\n            }\r\n            if(email===\"\"){\r\n                setEmailNone(true)\r\n            }\r\n            if(password===\"\"){\r\n                setPassNone(true)\r\n            }\r\n            if(passCheck===\"\"){\r\n                setPassCheckError(true)\r\n            }\r\n            setError(true)\r\n        }else{\r\n            setIsRegistered(true)\r\n            Axios.post(\"https://young-yame-0822.lolipop.io/signup\",{\r\n                name:name,\r\n                email:email,\r\n                password:password\r\n            })\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <>\r\n            {isRegistered ?\r\n            <>\r\n            <MediaQuery minWidth={500}>\r\n                <div className=\"home\">\r\n                    <div className={style.container}>   \r\n                        <p>新規登録が完了しました\r\n                        <br/>ログインしてサービスをお楽しみください</p>\r\n                        <button onClick={props.goLogin}>ログインする</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n            <MediaQuery maxWidth={500}>\r\n                <div className=\"homeS\">\r\n                    <div className={style.container}>   \r\n                        <p>新規登録が完了しました\r\n                        <br/>ログインしてサービスをお楽しみください</p>\r\n                        <button onClick={props.goLogin}>ログインする</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                </div>\r\n            </MediaQuery>\r\n            </>\r\n            \r\n            \r\n            :\r\n            <div>\r\n                {error?\r\n                <p className={style.errorTop}>※入力に誤りがあります</p>\r\n                :null}\r\n                <MediaQuery minWidth={500}>\r\n                <div className=\"homeSign\">\r\n                    <div className={style.container}>\r\n                        <div className={style.form}>\r\n                            <label>ユーザー名</label>\r\n                            <br/>\r\n                            <input type=\"text\" value={name} onChange={nameChange}/>\r\n                            {nameNone?\r\n                            <p>ユーザー名の入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.form}>\r\n                            <label>メールアドレス</label>\r\n                            <br/>\r\n                            <input type=\"text\" value={email} onChange={emailChange}/>\r\n                            {emailNone?\r\n                            <p>メールアドレスの入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.form}>\r\n                            <label>パスワード</label>\r\n                            <br/>\r\n                            <input type=\"password\" value={password} onChange={passChange}/>\r\n                            {passNone?\r\n                            <p>パスワードの入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.form}>\r\n                            <label>確認のためもう一度入力してください</label>\r\n                            <br/>\r\n                            <input type=\"password\" value={passCheck} onChange={checkChange}/>\r\n                            {passCheckError?\r\n                            <p>パスワードが一致しません</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <button onClick={register}>登録する</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                </div>\r\n                </MediaQuery>\r\n                <MediaQuery maxWidth={500}>\r\n                <div className=\"homeSignS\">\r\n                    <div className={style.containerS}>\r\n                        <div className={style.formS}>\r\n                            <label>ユーザー名</label>\r\n                            <br/>\r\n                            <input type=\"text\" value={name} onChange={nameChange}/>\r\n                            {nameNone?\r\n                            <p>ユーザー名の入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.formS}>\r\n                            <label>メールアドレス</label>\r\n                            <br/>\r\n                            <input type=\"text\" value={email} onChange={emailChange}/>\r\n                            {emailNone?\r\n                            <p>メールアドレスの入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.formS}>\r\n                            <label>パスワード</label>\r\n                            <br/>\r\n                            <input type=\"password\" value={password} onChange={passChange}/>\r\n                            {passNone?\r\n                            <p>パスワードの入力は必須です</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <div className={style.formS}>\r\n                            <label className={style.pass2}>確認のためもう一度入力してください</label>\r\n                            <br/>\r\n                            <input type=\"password\" value={passCheck} onChange={checkChange}/>\r\n                            {passCheckError?\r\n                            <p>パスワードが一致しません</p>\r\n                            :null}\r\n                        </div>\r\n                        <br/>\r\n                        <button onClick={register}>登録する</button>\r\n                        <br/>\r\n                        <button onClick={props.backHome}>ホームに戻る</button>\r\n                    </div>\r\n                </div>\r\n                </MediaQuery>\r\n                \r\n                \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\nexport default SignUp","import {useState,useEffect} from \"react\"\nimport './App.css';\nimport Chat from \"./component/chat\";\nimport Login from \"./component/login\";\nimport RoomSelect from \"./component/roomSelect\";\nimport SignUp from \"./component/signup\";\nimport  MediaQuery from \"react-responsive\"\n\nfunction App() {\n  const [page,setPage]=useState(\"home\");\n  const [isLoggedIn,setIsLoggedIn]=useState(false)\n  const [id,setId]=useState(null)\n  const [name,setName]=useState(\"ゲスト\")\n  \n\n  useEffect(()=>{\n    const strage=localStorage.getItem(\"loggedData\")\n    const loggedData=JSON.parse(strage)\n    if(loggedData !==null){\n      setName(loggedData[\"name\"])\n      setId(loggedData[\"id\"])\n    }else{\n      setName(\"ゲスト\")\n    }\n  },[isLoggedIn])\n  useEffect(()=>{\n    const strage=localStorage.getItem(\"loggedData\")\n    const loggedData=JSON.parse(strage)\n    if(loggedData !==null){\n      setIsLoggedIn(true)\n    }\n  },[])\n\n  /*ページ変更関数 */\n  const loginPage=()=>{\n    setPage(\"login\")\n  }\n  const signupPage=()=>{\n    setPage(\"signup\")\n  }\n  const homePage=()=>{\n    setPage(\"home\")\n  }\n  const RoomSelectPage=()=>{\n    setPage(\"roomselect\")\n  }\n\n  /*ログイン状態変更関数 */\n  const logout=()=>{\n    setIsLoggedIn(false)\n    localStorage.removeItem(\"loggedData\")\n  }\n  const login=()=>{\n    setIsLoggedIn(true)\n  }\n\n  /*ホームページ */\n  let home;\n  if(isLoggedIn){\n    home=<>\n      <MediaQuery minWidth={500}>\n      <div className=\"home\">\n        <div className=\"container\">\n          <h3>ようこそ{name}さん</h3>\n          <button className=\"homebutton\" onClick={RoomSelectPage}>チャットを始める</button>\n          <br/>\n          <button className=\"homebutton\" onClick={logout}>ログアウト</button>\n        </div>\n      </div>\n      </MediaQuery>\n      <MediaQuery maxWidth={500}>\n      <div className=\"homeS\">\n        <div className=\"container\">\n          <h3>ようこそ{name}さん</h3>\n          <button className=\"homebutton\" onClick={RoomSelectPage}>チャットを始める</button>\n          <br/>\n          <button className=\"homebutton\" onClick={logout}>ログアウト</button>\n        </div>\n      </div>\n      </MediaQuery>\n    </>\n  }else{\n    home=<>\n      <MediaQuery minWidth={500}>\n        <div className=\"home\">\n          <div className=\"container\">\n            <button className=\"homebutton\" onClick={loginPage}>ログイン</button>\n            <button className=\"homebutton\" onClick={signupPage}>新規登録</button>\n          </div>\n        </div>\n      </MediaQuery>\n      <MediaQuery maxWidth={500}>\n        <div className=\"homeS\">\n          <div className=\"container\">\n            <button className=\"homebutton\" onClick={loginPage}>ログイン</button>\n            <button className=\"homebutton\" onClick={signupPage}>新規登録</button>\n          </div>\n        </div>\n      </MediaQuery>\n    </>\n    \n      \n    \n  }\n\n  /*ページたち */\n  let currentPage;\n  if(page===\"home\"){\n    currentPage=home\n  }else if(page===\"login\"){\n    currentPage=<Login login={login} backHome={homePage}/>\n  }else if(page===\"signup\"){\n    currentPage=<SignUp backHome={homePage} goLogin={loginPage}/>\n  }else if(page===\"roomselect\"){\n    currentPage=<RoomSelect backHome={homePage} userId={id} user={name}/>\n  }else{\n    currentPage=<Chat backHome={homePage}/>\n  }\n\n  return (\n    <div className=\"App\">\n      <p className=\"version\">個人チャットアプリver.3.00</p>\n     {currentPage}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"select_select__2OTDf\",\"selectS\":\"select_selectS__26BGj\",\"selectTop\":\"select_selectTop__k06a-\",\"clearLeft\":\"select_clearLeft__37DDh\",\"selectBottom\":\"select_selectBottom__2IKYU\",\"serch\":\"select_serch__bFchJ\",\"requestTop\":\"select_requestTop__WfKCw\",\"requestBottom\":\"select_requestBottom__3UBvg\",\"requestButton\":\"select_requestButton__3HFFm\",\"requestright1\":\"select_requestright1__2H9oV\",\"requestright2\":\"select_requestright2__2w6rv\",\"alert\":\"select_alert__hm77o\",\"search\":\"select_search__1IwE6\",\"searchButton\":\"select_searchButton__29D5j\",\"sendButton\":\"select_sendButton__GdY8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chat_container__11cEr\",\"username\":\"chat_username__3fdRO\",\"chatarea\":\"chat_chatarea__3uEeS\",\"chatareaS\":\"chat_chatareaS__PIkKx\",\"comment1\":\"chat_comment1__2oRJ-\",\"comment2\":\"chat_comment2__2GMg4\",\"clearLeft\":\"chat_clearLeft__3dRx8\",\"clearRight\":\"chat_clearRight__jB6rd\",\"form\":\"chat_form__AoqiE\",\"formS\":\"chat_formS__StWmC\",\"pointerS\":\"chat_pointerS__1a9f2\",\"pointer\":\"chat_pointer__3Vlwc\",\"leave\":\"chat_leave__15Mgx\",\"leaveS\":\"chat_leaveS__3NDNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__3_pX6\",\"containerS\":\"login_containerS__38j_G\",\"pass2\":\"login_pass2__1Gms8\",\"errorTop\":\"login_errorTop__1Empz\",\"form\":\"login_form__2J9sb\",\"formS\":\"login_formS__XMU-d\"};"],"sourceRoot":""}